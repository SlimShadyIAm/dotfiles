set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
set-environment -g PATH "/opt/homebrew/bin:/usr/local/bin:/bin:/usr/bin"

run '~/.tmux/plugins/tpm/tpm'
 
set -s escape-time 0 # Fix vim switching delay
set -g history-limit 50000 # Set scrollback buffer to 50000 lines
set -g display-time 1000 # Show tmux messages for 1 second
set -g status-interval 5 # Update status bar every 5 seconds

set -g default-terminal "screen-256color" # Report as screen-256color
set -sa terminal-overrides ",xterm*:Tc" # Fix vim background color

set -g status-keys emacs # prefix + : to enter command mode
set -g focus-events on # Enable focus events
set -g mouse on # Used for trackpad scrolling
setw -g aggressive-resize on # Resize panes on window size change

# Replace prefix with Ctrl + Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Integrate pane navigation with vim (the grep supports different flavors of vi/vim/nvim)
is_vim="ps -o 'state= -o comm=' -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Use index numbers starting at 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Quick reloading for the configuration file
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Reloaded Configuration"

# Session launcher (this is also invoked on Terminal launch)
bind n popup -EE -w 60% -h 60% "~/.config/tmux/tmux_launch.sh"

# Open new windows in the same directory as the current window
bind t new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}" 
bind x split-window -v -c "#{pane_current_path}"
bind q kill-pane


# Show the lazygit UI if it's installed
if-shell "command -v lazygit >/dev/null" {
	bind g popup -EE -w 90% -h 90% -d "#{pane_current_path}" "lazygit"
} {
	bind g display-message "lazygit not found"
}

# Show btop if it's install or revert to top
if-shell "command -v btop >/dev/null" {
	bind b popup -EE -w 90% -h 90% "btop"
} {
	bind b popup -EE -w 90% -h 90% "top"
}

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'rose-pine/tmux'

set -g @rose_pine_variant 'moon'

run '~/.config/tmux/plugins/tpm/tpm'

# Format the status bar
set -g status "on"
set -g status-justify "left"

set -g status-position bottom
set -g status-left-length 100
set -g status-right-length 100

set -g window-status-separator ""
set -g status-style "fg=#{@primary_color},bg=#{@black_color}"
set -g status-left "#[fg=#{@gray_color},bg=#{@primary_color},bold] #S "
set -g pane-border-style "fg=#{@gray_color}"
set -g pane-active-border-style "fg=#{@primary_color}"
set -g status-right "#[fg=#{@white_color},bg=#{@gray_color}]  %Y-%m-%d %H:%M"
set -g window-status-format "#[fg=#{@white_color},bg=#{@black_color},nobold]   #I #W #F "
set -g window-status-current-format "#[fg=#{@primary_color},bg=#{@gray_color},bold]  #I #W #F "

set -g @rose_pine_host 'on'
set -g @rose_pine_date_time ''
set -g @rose_pine_user 'on'
set -g @rose_pine_bar_bg_disable 'on' 
set -g @rose_pine_bar_bg_disabled_color_option '0'

set -g @rose_pine_only_windows 'on'
set -g @rose_pine_disable_active_window_menu 'on'

set -g @rose_pine_default_window_behavior 'on'
set -g @rose_pine_show_current_program 'on'
set -g @rose_pine_show_pane_directory 'on'

set -g @rose_pine_left_separator ' > '
set -g @rose_pine_right_separator ' < '
set -g @rose_pine_field_separator ' | '

# These are not padded
set -g @rose_pine_session_icon '' # Changes the default icon to the left of the session name
set -g @rose_pine_current_window_icon '' # Changes the default icon to the left of the active window name
set -g @rose_pine_folder_icon '' # Changes the default icon to the left of the current directory folder
set -g @rose_pine_username_icon '' # Changes the default icon to the right of the hostname
set -g @rose_pine_hostname_icon '󰒋' # Changes the default icon to the right of the hostname
set -g @rose_pine_date_time_icon '󰃰' # Changes the default icon to the right of the date module
set -g @rose_pine_window_status_separator "  " # Changes the default icon that appears between window names

# Very beta and specific opt-in settings, tested on v3.2a, look at issue #10
set -g @rose_pine_prioritize_windows 'on' # Disables the right side functionality in a certain window count / terminal width
set -g @rose_pine_width_to_hide '80' # Specify a terminal width to toggle off most of the right side functionality
set -g @rose_pine_window_count '5' # Specify a number of windows, if there are more than the number, do the same as width_to_hide
