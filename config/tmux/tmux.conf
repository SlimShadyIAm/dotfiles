set -s escape-time 0 # Fix vim switching delay
set -g history-limit 50000 # Set scrollback buffer to 50000 lines
set -g display-time 1000 # Show tmux messages for 1 second
set -g status-interval 5 # Update status bar every 5 seconds

set -g default-terminal "screen-256color" # Report as screen-256color
set -sa terminal-overrides ",xterm*:Tc" # Fix vim background color

# # Use M1 brew installation ZSH on macOS
# if-shell "uname -s | grep -q Darwin" {
# 	set -g default-shell "/opt/homebrew/bin/zsh"
# }

set -g status-keys emacs # prefix + : to enter command mode
set -g focus-events on # Enable focus events
set -g mouse on # Used for trackpad scrolling
setw -g aggressive-resize on # Resize panes on window size change

# Replace prefix with Ctrl + Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Integrate pane navigation with vim (the grep supports different flavors of vi/vim/nvim)
is_vim="ps -o 'state= -o comm=' -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 5'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 5'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Use index numbers starting at 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Quick reloading for the configuration file
bind r source-file ~/.tmux.conf \; display-message "Reloaded Configuration"

# Session launcher (this is also invoked on Terminal launch)
bind n popup -EE -w 60% -h 60% "$dd/config/tui/tmux_launch.sh"

# Open new windows in the same directory as the current window
bind t new-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}" 
bind x split-window -v -c "#{pane_current_path}"
bind q kill-pane

# Format the status bar
set -g status "on"
set -g status-justify "left"
set -g status-style "fg=#58a6ff,bg=#090c10"

set -g status-position bottom
set -g status-left-length 100
set -g status-right-length 100

set -g status-left-style NONE
set -g status-right-style NONE
set -g status-left "#[fg=#090c10,bg=#58a6ff,bold] #S #[fg=#58a6ff,bg=#090c10,nobold,nounderscore,noitalics] "
set -g status-right " #(exec tmux ls | wc -l) Active Sessions #[fg=#58a6ff,bg=#c5c5c5,nobold,nounderscore,noitalics]"

# Format the window list
setw -g window-status-activity-style "underscore,fg=#b3b1ad,bg=#090c10"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=#0d1117,bg=#090c10"
setw -g window-status-format "#[fg=#4d5566,bg=#090c10,nobold,nounderscore,noitalics] #I  #W #F #[fg=#090c10,bg=#090c10,nobold,nounderscore,noitalics] "
setw -g window-status-current-format "#[fg=#484f58,bg=#c5c5c5,bold] #I  #W #F #[fg=#c5c5c5,bg=#090c10,nobold,nounderscore,noitalics] "

set -g mode-style "fg=#c9d1d9,bg=#090c10"
set -g message-style "fg=#c9d1d9,bg=#090c10"
set -g message-command-style "fg=#c9d1d9,bg=#090c10"

set -g pane-border-style "fg=#b3b1ad"
set -g pane-active-border-style "fg=#58a6ff"

# Show the lazygit UI if it's installed
if-shell "command -v lazygit >/dev/null" {
	bind g popup -EE -w 90% -h 90% -d "#{pane_current_path}" "lazygit"
} {
	bind g display-message "lazygit not found"
}

# Show btop if it's install or revert to top
if-shell "command -v btop >/dev/null" {
	bind b popup -EE -w 90% -h 90% "btop"
} {
	bind b popup -EE -w 90% -h 90% "top"
}

